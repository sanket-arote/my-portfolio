{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\Personal_Protfolio_React1\\\\portfolio\\\\src\\\\Context.js\",\n  _s = $RefreshSig$();\n// createContext = create a context that components can provide or read.\n// useReducer =  when the next state depends on the previous one.\nimport { createContext, useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const themeContext = /*#__PURE__*/createContext();\n\n// Initializing the State i.e. Dark or Normal\n\nconst intialState = {\n  darkMode: false\n};\n\n// to change the current theme\nconst themeReducer = (state, action) => {\n  switch (action.type) {\n    case 'toggle':\n      return {\n        arkMode: !state.darkMode\n      };\n    default:\n      return state;\n  }\n};\n\n// ThemeProvider\nexport const ThemeProvider = props => {\n  _s();\n  const [state, dispatch] = useReducer(themeReducer, intialState);\n  return /*#__PURE__*/_jsxDEV(themeContext.Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n_s(ThemeProvider, \"OmMLnGUD43KmAt2tR/kSNvJPeko=\");\n_c = ThemeProvider;\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["createContext","useReducer","themeContext","intialState","darkMode","themeReducer","state","action","type","arkMode","ThemeProvider","props","dispatch","children"],"sources":["D:/React/Personal_Protfolio_React1/portfolio/src/Context.js"],"sourcesContent":["// createContext = create a context that components can provide or read.\r\n// useReducer =  when the next state depends on the previous one.\r\nimport { createContext, useReducer } from \"react\";\r\n\r\nexport const themeContext = createContext();\r\n\r\n// Initializing the State i.e. Dark or Normal\r\n\r\nconst intialState = {darkMode : false}\r\n\r\n// to change the current theme\r\nconst themeReducer = (state, action) => {\r\n    switch(action.type){\r\n        case 'toggle':\r\n            return{arkMode : !state.darkMode};\r\n        default: \r\n            return state;\r\n    }\r\n};\r\n\r\n// ThemeProvider\r\nexport const ThemeProvider = (props) =>{\r\n    const[state, dispatch] = useReducer(themeReducer, intialState)\r\n    return(\r\n        <themeContext.Provider value={{state,dispatch}}>\r\n            {props.children}\r\n        </themeContext.Provider>\r\n    );\r\n};"],"mappings":";;AAAA;AACA;AACA,SAASA,aAAa,EAAEC,UAAU,QAAQ,OAAO;AAAC;AAElD,OAAO,MAAMC,YAAY,gBAAGF,aAAa,EAAE;;AAE3C;;AAEA,MAAMG,WAAW,GAAG;EAACC,QAAQ,EAAG;AAAK,CAAC;;AAEtC;AACA,MAAMC,YAAY,GAAG,CAACC,KAAK,EAAEC,MAAM,KAAK;EACpC,QAAOA,MAAM,CAACC,IAAI;IACd,KAAK,QAAQ;MACT,OAAM;QAACC,OAAO,EAAG,CAACH,KAAK,CAACF;MAAQ,CAAC;IACrC;MACI,OAAOE,KAAK;EAAC;AAEzB,CAAC;;AAED;AACA,OAAO,MAAMI,aAAa,GAAIC,KAAK,IAAI;EAAA;EACnC,MAAK,CAACL,KAAK,EAAEM,QAAQ,CAAC,GAAGX,UAAU,CAACI,YAAY,EAAEF,WAAW,CAAC;EAC9D,oBACI,QAAC,YAAY,CAAC,QAAQ;IAAC,KAAK,EAAE;MAACG,KAAK;MAACM;IAAQ,CAAE;IAAA,UAC1CD,KAAK,CAACE;EAAQ;IAAA;IAAA;IAAA;EAAA,QACK;AAEhC,CAAC;AAAC,GAPWH,aAAa;AAAA,KAAbA,aAAa;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}